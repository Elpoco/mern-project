{"version":3,"sources":["Library/CallApi.js","App.js","reportWebVitals.js","index.js"],"names":["CallApi","apiUrl","params","callback","URL","getCallApi","a","axios","method","url","then","getData","data","catch","e","console","log","App","useState","dataS","setData","price","setPrice","volume","setVolume","userSrl","api","aData","Object","entries","map","entrie","idx","push","key","value","trade_price","trade_volume","useEffect","setInterval","ask","user_srl","symbol","side","bid","className","style","marginTop","placeholder","onChange","target","onClick","backgroundColor","display","flexDirection","justifyContent","item","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAEe,SAASA,EAAQC,GAAuC,IAA/BC,EAA8B,uDAArB,GAAIC,EAAiB,uDAAN,KAC9C,MAAZA,IACFA,EAAWD,EACXA,EAAS,IAEX,IAAME,EAAM,wBAA0BH,EAIhCI,EAAU,uCAAG,sBAAAC,EAAA,sEACXC,IAAM,CAAEC,OAAQ,MAAOC,IAAKL,EAAKF,OAAQA,IAC5CQ,MAAK,SAACC,GACLR,EAASQ,EAAQC,SAElBC,OAAM,SAACC,GACNC,QAAQC,IAAI,mBAAoBF,MANnB,2CAAH,qDAShBT,I,WCwIaY,MAvJf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KACA,GADA,KACwBD,mBAAS,KAAjC,mBAAON,EAAP,KAAaQ,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAoBN,mBAAS,OAA7B,mBACMO,GADN,UACgB,MAEVC,EAAM,WACV1B,EAAQ,cAAc,SAACY,GACrB,IAAIe,EAAQ,GACRf,EAAK,KACPgB,OAAOC,QAAQjB,EAAK,IAAIkB,KAAI,SAACC,EAAQC,GACnCL,EAAMM,KAAK,CAAEC,IAAKH,EAAO,GAAII,MAAOJ,EAAO,QAE7CT,EAASV,EAAK,GAAGwB,aACjBZ,EAAUZ,EAAK,GAAGyB,cAClBjB,EAAQO,QAKdW,qBAAU,WAIRZ,IACAa,aAAY,WACVb,MAEC,KAEH1B,EAAQ,eAAe,SAACY,GACtBG,QAAQC,IAAIJ,QAUb,IAEH,IAQM4B,EAAM,WASVxC,EAAQ,aARK,CAEXyC,SAAUhB,EACViB,OAAQ,WACRrB,MAAOA,EACPE,OAAQA,EACRoB,KAAM,QAEsB,SAAC/B,GAC7BG,QAAQC,IAAIJ,OAIVgC,EAAM,WAQV5C,EAAQ,aAPK,CACXyC,SAAUhB,EACViB,OAAQ,WACRrB,MAAOA,EACPE,OAAQA,EACRoB,KAAM,QAEsB,SAAC/B,GAC7BG,QAAQC,IAAIJ,OAIhB,OACE,sBAAKiC,UAAU,MAAf,UACE,sDAAyBpB,KACzB,qBAAKqB,MAAO,CAAEC,UAAW,OAqBzB,sBAAKD,MAAO,CAAEC,UAAW,IAAzB,UACE,uBACEC,YAAY,eACZb,MAAOd,EACP4B,SAAU,SAACnC,GACTQ,EAASR,EAAEoC,OAAOf,UAGtB,wBAAQgB,QAASP,EAAKE,MAAO,CAAEM,gBAAiB,WAAhD,0BAGA,wBAAQD,QAASX,EAAKM,MAAO,CAAEM,gBAAiB,WAAhD,6BAIF,sBACEN,MAAO,CACLO,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAJpB,UAOE,gCACE,wCACCpC,EAAMW,KAAI,SAAC0B,EAAMC,GAChB,OACE,gCACGD,EAAKtB,IADR,MACgBsB,EAAKrB,QADXsB,SAMhB,gCACE,uCACC7C,EAAKkB,KAAI,SAAC0B,EAAMC,GACf,OACE,gCACGD,EAAKtB,IADR,MACgBsB,EAAKrB,QADXsB,gBCrITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.af58efd7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default function CallApi(apiUrl, params = \"\", callback = null) {\r\n  if (callback == null) {\r\n    callback = params;\r\n    params = \"\";\r\n  }\r\n  const URL = \"http://127.0.0.1:3000\" + apiUrl;\r\n\r\n  // console.log(params);\r\n\r\n  const getCallApi = async () => {\r\n    await axios({ method: \"GET\", url: URL, params: params })\r\n      .then((getData) => {\r\n        callback(getData.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"CallApi error : \", e);\r\n      });\r\n  };\r\n  getCallApi();\r\n}\r\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { initSocket } from \"./Library/Socket\";\nimport CallApi from \"./Library/CallApi\";\n\nfunction App() {\n  const [dataS, setDataS] = useState([]);\n  const [data, setData] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [volume, setVolume] = useState(0);\n  const [id, setId] = useState(10020);\n  const userSrl = 4589;\n\n  const api = () => {\n    CallApi(\"/api/coins\", (data) => {\n      var aData = [];\n      if (data[0]) {\n        Object.entries(data[0]).map((entrie, idx) => {\n          aData.push({ key: entrie[0], value: entrie[1] });\n        });\n        setPrice(data[0].trade_price);\n        setVolume(data[0].trade_volume);\n        setData(aData);\n      }\n    });\n  };\n\n  useEffect(() => {\n    // initSocket(\"data\", (res) => {\n    //   setDataS(res);\n    // });\n    api();\n    setInterval(() => {\n      api();\n      // runMM();\n    }, 1000);\n\n    CallApi(\"/api/market\", (data) => {\n      console.log(data);\n    });\n\n    // var params = {\n    //   user_srl: \"10020\",\n    //   symbol: \"LOOM-ETH\",\n    // };\n    // CallApi(\"/api/info\", params, (data) => {\n    //   console.log(data);\n    // });\n  }, []);\n\n  const runMM = () => {\n    console.log(\"running!!\");\n    if (price !== 0 && volume !== 0) {\n      ask();\n      bid();\n    }\n  };\n\n  const ask = () => {\n    var params = {\n      // user_srl: \"10020\",\n      user_srl: userSrl,\n      symbol: \"ETH-KLIN\",\n      price: price,\n      volume: volume,\n      side: \"ask\",\n    };\n    CallApi(\"/api/order\", params, (data) => {\n      console.log(data);\n    });\n  };\n\n  const bid = () => {\n    var params = {\n      user_srl: userSrl,\n      symbol: \"ETH-KLIN\",\n      price: price,\n      volume: volume,\n      side: \"bid\",\n    };\n    CallApi(\"/api/order\", params, (data) => {\n      console.log(data);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Hello world!! srl : {userSrl}</h1>\n      <div style={{ marginTop: 200 }}></div>\n      {/* <div>\n        <div>\n          <input\n            type=\"radio\"\n            id=\"10020\"\n            name=\"radio\"\n            defaultChecked={true}\n            onClick={() => setId(10020)}\n          />\n          <label htmlFor=\"10020\">10020</label>\n        </div>\n        <div>\n          <input type=\"radio\" id=\"1111\" name=\"radio\" onClick={() => setId(1)} />\n          <label htmlFor=\"1111\">1111</label>\n        </div>\n        <div>\n          <input type=\"radio\" id=\"2222\" name=\"radio\" onClick={() => setId(2)} />\n          <label htmlFor=\"2222\">2222</label>\n        </div>\n      </div> */}\n      <div style={{ marginTop: 50 }}>\n        <input\n          placeholder=\"가격\"\n          value={price}\n          onChange={(e) => {\n            setPrice(e.target.value);\n          }}\n        />\n        <button onClick={bid} style={{ backgroundColor: \"#FF9494\" }}>\n          매수\n        </button>\n        <button onClick={ask} style={{ backgroundColor: \"#94A6FF\" }}>\n          매도\n        </button>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        <div>\n          <h3>socket</h3>\n          {dataS.map((item, index) => {\n            return (\n              <div key={index}>\n                {item.key} : {item.value}\n              </div>\n            );\n          })}\n        </div>\n        <div>\n          <h3>axios</h3>\n          {data.map((item, index) => {\n            return (\n              <div key={index}>\n                {item.key} : {item.value}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}