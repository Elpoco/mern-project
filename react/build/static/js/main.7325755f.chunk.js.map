{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["socket","io","connect","App","useState","dataS","setDataS","data","setData","api","a","axios","get","aData","Object","entries","map","entrie","idx","push","key","value","useEffect","on","JSON","parse","console","log","setInterval","className","style","display","flexDirection","justifyContent","item","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAKMA,EAASC,IAAGC,QAAQ,yBAuEXC,MArEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAG,uCAAG,gCAAAC,EAAA,sEACaC,IAAMC,IAAI,mCADvB,gBACFL,EADE,EACFA,KACJM,EAAQ,GACZC,OAAOC,QAAQR,EAAK,IAAIS,KAAI,SAACC,EAAQC,GACnCL,EAAMM,KAAK,CAAEC,IAAKH,EAAO,GAAII,MAAOJ,EAAO,QAG7CT,EAAQK,GAPE,2CAAH,qDA6BT,OAnBAS,qBAAU,WACRtB,EAAOuB,GAAG,QAAQ,SAAChB,GACjBA,EAAOiB,KAAKC,MAAMlB,GAClB,IAAIM,EAAQ,GACZC,OAAOC,QAAQR,EAAK,IAAIS,KAAI,SAACC,EAAQC,GACnCL,EAAMM,KAAK,CAAEC,IAAKH,EAAO,GAAII,MAAOJ,EAAO,QAE7CS,QAAQC,IAAIpB,GACZD,EAASO,QAEV,IAEHS,qBAAU,WACRb,IACAmB,aAAY,WACVnB,MACC,OACF,IAGD,sBAAKoB,UAAU,MAAf,UACE,+CAEA,sBACEC,MAAO,CACLC,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAJpB,UAOE,gCACE,wCACC5B,EAAMW,KAAI,SAACkB,EAAMC,GAChB,OACE,gCACGD,EAAKd,IADR,MACgBc,EAAKb,QADXc,SAMhB,gCACE,uCACC5B,EAAKS,KAAI,SAACkB,EAAMC,GACf,OACE,gCACGD,EAAKd,IADR,MACgBc,EAAKb,QADXc,gBCrDTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7325755f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io.connect(\"http://localhost:3000\");\n\nfunction App() {\n  const [dataS, setDataS] = useState([]);\n  const [data, setData] = useState([]);\n\n  const api = async () => {\n    const { data } = await axios.get(\"http://127.0.0.1:3000/api/coins\");\n    var aData = [];\n    Object.entries(data[0]).map((entrie, idx) => {\n      aData.push({ key: entrie[0], value: entrie[1] });\n    });\n    // console.log(aData);\n    setData(aData);\n  };\n\n  useEffect(() => {\n    socket.on(\"data\", (data) => {\n      data = JSON.parse(data);\n      var aData = [];\n      Object.entries(data[0]).map((entrie, idx) => {\n        aData.push({ key: entrie[0], value: entrie[1] });\n      });\n      console.log(data);\n      setDataS(aData);\n    });\n  }, []);\n\n  useEffect(() => {\n    api();\n    setInterval(() => {\n      api();\n    }, 1000);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Hello world!!</h1>\n      {/* <div>{data}</div> */}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        <div>\n          <h3>socket</h3>\n          {dataS.map((item, index) => {\n            return (\n              <div key={index}>\n                {item.key} : {item.value}\n              </div>\n            );\n          })}\n        </div>\n        <div>\n          <h3>axios</h3>\n          {data.map((item, index) => {\n            return (\n              <div key={index}>\n                {item.key} : {item.value}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}